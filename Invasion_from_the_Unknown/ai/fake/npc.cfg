#textdomain wesnoth-Invasion_from_the_Unknown

# wmlindent: start ignoring
#define NPC_BIRD_UNIT_TYPES
Crow,Falcon,Shaxthal Razorbird,Shaxthal Thunderbird,Shaxthal Wyrm#enddef
# wmlindent: stop ignoring

#define IS_NPC
    {IDLE_AI_ALGORITHM}
#enddef

#define IS_HOSTILE_NPC
    [ai]
        aggression=1.0
        leader_value=0
        village_value=0
        protect_leader=0
        grouping=no
        caution=0.0
        simple_targeting=yes
    [/ai]
#enddef

#define NPC_SIDE SIDE
    [side]
        color=pink
        gold=0
        income=-2
        recruit=
        side={SIDE}
        controller=ai
        {IS_NPC}
        no_leader=yes
        team_name=npc_team
    [/side]
#enddef

#define NPC_HOSTILE_SIDE SIDE
    [side]
        side={SIDE}
        controller=ai
        [ai]
            #makes them focus on the player
            [target]
                side=1
                value=5
            [/target]
            aggression=1.0
            leader_value=0
            village_value=0
            protect_leader=0
            grouping=no
            caution=0.1
            simple_targeting=yes
        [/ai]
        no_leader=yes
        team_name=npc_team
    [/side]
#enddef

#define NPC TYPE X Y SIDE
    {RANDOM "n,s,ne,nw,se,sw"}
    [unit]
        generate_name=no
        type={TYPE}
        x,y={X},{Y}
        side={SIDE}
        ai_special=guardian
        facing=$random
        random_traits=yes
        random_gender=yes
    [/unit]
    {CLEAR_VARIABLE random}
#enddef

#define IS_OUT_OF_NPC_BOUNDS _CONTAINER _X1 _X2 _Y1 _Y2
    {VARIABLE_NUMERICAL_LESS_OR_EQUAL_THAN {_CONTAINER}.x {_X1} }
    [or]
        {VARIABLE_NUMERICAL_GREATER_OR_EQUAL_THAN {_CONTAINER}.x {_X2} }
    [/or]
    [or]
        {VARIABLE_NUMERICAL_LESS_OR_EQUAL_THAN {_CONTAINER}.y {_Y1} }
    [/or]
    [or]
        {VARIABLE_NUMERICAL_GREATER_OR_EQUAL_THAN {_CONTAINER}.y {_Y2} }
    [/or]
#enddef

#define NPC_BIRD_BEHAVIOR _SIDE_NUMBER _X1 _X2 _Y1 _Y2
    [event]
        name="side "+{_SIDE_NUMBER}+" turn refresh"
        first_time_only=no

        [store_unit]
            [filter]
                type={NPC_BIRD_UNIT_TYPES}
                side={_SIDE_NUMBER}
                {NOT_ON_RECALL_LIST}
            [/filter]
            variable=temp_npcs
            kill=no
        [/store_unit]

        {FOREACH temp_npcs k}
            [if]
                {IS_OUT_OF_NPC_BOUNDS temp_npcs[$k] {_X1} {_X2} {_Y1} {_Y2} }
                [then]
                    #
                    # Bird about to go out of bounds, remove it.
                    #
                    [kill]
                        x="$temp_npcs[$k].x"
                        y="$temp_npcs[$k].y"
                        animate=no
                        fire_event=yes
                    [/kill]
                [/then]
                [else]
                    [if]
                        {VARIABLE_NUMERICAL_GREATER_THAN temp_npcs[$k].moves 0}
                        [then]
                            [set_variables]
                                mode=replace
                                name=temp_npc_ctl
                                [value]
                                    steps=$temp_npcs[$k].moves
                                    stepping_out_of_bounds=no
                                    [start]
                                        x=$temp_npcs[$k].x
                                        y=$temp_npcs[$k].y
                                    [/start]
                                    [movepath]
                                        x=$temp_npcs[$k].x
                                        y=$temp_npcs[$k].y
                                        direction=
                                    [/movepath]
                                [/value]
                            [/set_variables]
                            {VARIABLE_RANDOM temp_npc_ctl.movepath.direction "n,s,ne,nw,se,sw"}

                            {VARIABLE j 0}

                            [while]
                                {VARIABLE_NUMERICAL_LESS_THAN j $temp_npc_ctl.steps}
                                {VARIABLE_BOOLEAN_EQUALS temp_npc_ctl.step_out_of_bounds no}
                                [do]
                                    [store_locations]
                                        [filter_adjacent_location]
                                            adjacent="-$temp_npc_ctl.movepath.direction"
                                            x=$temp_npcs[$k].x
                                            y=$temp_npcs[$k].y
                                        [/filter_adjacent_location]
                                        variable=temp_npc_ctl.target
                                    [/store_locations]

                                    [if]
                                        {IS_OUT_OF_NPC_BOUNDS temp_npc_ctl.target {_X1} {_X2} {_Y1} {_Y2} }
                                        [then]
                                            {VARIABLE temp_npc_ctl.stepping_out_of_bounds yes}
                                        [/then]
                                        [else]
                                            [set_variables]
                                                mode=merge
                                                name="temp_npc_ctl.movepath"
                                                [value]
                                                    x="$temp_npc_ctl.movepath.x|,$temp_npc_ctl.target.x"
                                                    y="$temp_npc_ctl.movepath.y|,$temp_npc_ctl.target.y"
                                                [/value]
                                            [/set_variables]

                                            [set_variables]
                                                mode=merge
                                                name="temp_npcs[$k]"
                                                [value]
                                                    x="$temp_npc_ctl.target.x"
                                                    y="$temp_npc_ctl.target.y"
                                                [/value]
                                            [/set_variables]

                                            {VARIABLE_DEC temp_npcs[$k].moves}
                                        [/else]
                                    [/if]

                                    {CLEAR_VARIABLE temp_npc_ctl.target}

                                    {VARIABLE_INC j}
                                [/do]
                            [/while]

                            {CLEAR_VARIABLE j}

                            # Move the bird

                            [kill]
                                x=$temp_npc_ctl.start.x
                                y=$temp_npc_ctl.start.y
                                animate,fire_event=no,no
                            [/kill]

                            [move_unit_fake]
                                x=$temp_npc_ctl.movepath.x
                                y=$temp_npc_ctl.movepath.y

                                side=$temp_npcs[$k].side

                                type=$temp_npcs[$k].type
                                variation=$temp_npcs[$k].variation
                                gender=$temp_npcs[$k].gender
                            [/move_unit_fake]

                            {VARIABLE temp_npcs[$k].facing $temp_npc_ctl.movepath.direction}

                            #
                            # TODO: quit the course when encountering a unit instead?
                            #

                            [if]
                                {VARIABLE_BOOLEAN_EQUALS temp_npc_ctl.stepping_out_of_bounds no}
                                [then]
                                    [unstore_unit]
                                        find_vacant=yes
                                        variable="temp_npcs[$k]"
                                    [/unstore_unit]
                                [/then]
                            [/if]

                            [redraw][/redraw]

                            {CLEAR_VARIABLE temp_npc_ctl}
                        [/then]
                    [/if]
                [/else]
            [/if]
        {NEXT k}

        {CLEAR_VARIABLE temp_npcs}
    [/event]
#enddef
